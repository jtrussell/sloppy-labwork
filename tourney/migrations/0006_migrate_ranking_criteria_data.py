# Generated by Django 5.2 on 2025-09-15 14:04

from django.db import migrations


def migrate_ranking_criteria_data(apps, schema_editor):
    Stage = apps.get_model('tourney', 'Stage')
    StageRankingCriteria = apps.get_model('tourney', 'StageRankingCriteria')
    
    for stage in Stage.objects.all():
        if stage.ranking_criteria:
            order = 1
            for criterion in stage.ranking_criteria:
                if criterion.get('enabled', False):
                    StageRankingCriteria.objects.create(
                        stage=stage,
                        criterion_key=criterion['key'],
                        order=order
                    )
                    order += 1


def reverse_migrate_ranking_criteria_data(apps, schema_editor):
    Stage = apps.get_model('tourney', 'Stage')
    StageRankingCriteria = apps.get_model('tourney', 'StageRankingCriteria')
    
    available_keys = ['wins', 'losses', 'points', 'strength_of_schedule', 'head_to_head', 'seed', 'random']
    
    for stage in Stage.objects.all():
        criteria_list = []
        enabled_criteria = list(stage.stage_ranking_criteria.all().order_by('order'))
        
        for criterion in enabled_criteria:
            criteria_list.append({'key': criterion.criterion_key, 'enabled': True})
        
        for key in available_keys:
            if not any(c['key'] == key for c in criteria_list):
                criteria_list.append({'key': key, 'enabled': False})
        
        stage.ranking_criteria = criteria_list
        stage.save()


class Migration(migrations.Migration):

    dependencies = [
        ('tourney', '0005_add_stage_ranking_criteria_model'),
    ]

    operations = [
        migrations.RunPython(
            migrate_ranking_criteria_data,
            reverse_migrate_ranking_criteria_data
        ),
    ]
