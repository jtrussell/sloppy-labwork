# Generated by Django 5.2 on 2025-09-12 22:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('pairing_strategy', models.CharField(default='swiss', max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('dropped', 'Dropped')], default='active', max_length=10)),
                ('nickname', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_players', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tourney.round')),
            ],
            options={
                'verbose_name_plural': 'Matches',
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='round',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='tourney.stage'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='tourney.stage')),
            ],
        ),
        migrations.CreateModel(
            name='StagePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.PositiveIntegerField()),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='tourney.group')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_participations', to='tourney.player')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_players', to='tourney.stage')),
            ],
            options={
                'ordering': ['seed'],
            },
        ),
        migrations.CreateModel(
            name='MatchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_one_score', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('player_two_score', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='tourney.match')),
                ('winner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_wins', to='tourney.stageplayer')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='player_one',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player_one', to='tourney.stageplayer'),
        ),
        migrations.AddField(
            model_name='match',
            name='player_two',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player_two', to='tourney.stageplayer'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('is_accepting_registrations', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tournaments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.AddField(
            model_name='stage',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='tourney.tournament'),
        ),
        migrations.AddField(
            model_name='player',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='tourney.tournament'),
        ),
        migrations.CreateModel(
            name='TournamentActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create_tournament', 'Create Tournament'), ('add_player', 'Add Player'), ('drop_player', 'Drop Player'), ('undrop_player', 'Undrop Player'), ('create_round', 'Create Round'), ('advance_stage', 'Advance Stage'), ('report_result', 'Report Result'), ('update_result', 'Update Result'), ('delete_round', 'Delete Round'), ('register_player', 'Register Player'), ('unregister_player', 'Unregister Player')], max_length=20)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='tourney.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='TournamentAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_admins', to='tourney.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_admin_roles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='round',
            constraint=models.UniqueConstraint(fields=('stage', 'order'), name='unique_round_order'),
        ),
        migrations.AddConstraint(
            model_name='stageplayer',
            constraint=models.UniqueConstraint(fields=('player', 'stage'), name='unique_stage_player'),
        ),
        migrations.AddConstraint(
            model_name='stageplayer',
            constraint=models.UniqueConstraint(fields=('stage', 'seed'), name='unique_stage_seed'),
        ),
        migrations.AddConstraint(
            model_name='stage',
            constraint=models.UniqueConstraint(fields=('tournament', 'order'), name='unique_stage_order'),
        ),
        migrations.AddConstraint(
            model_name='player',
            constraint=models.UniqueConstraint(fields=('user', 'tournament'), name='unique_tournament_player'),
        ),
        migrations.AddConstraint(
            model_name='tournamentadmin',
            constraint=models.UniqueConstraint(fields=('user', 'tournament'), name='unique_tournament_admin'),
        ),
    ]
